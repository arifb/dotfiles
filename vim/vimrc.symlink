call pathogen#infect()

" theme
syntax enable
set background=dark
colorscheme solarized
call togglebg#map("<F5>")

" prevent 'unloading' buffers
set hidden

" Set leader to comma
let mapleader = ","

" word wrap
set linebreak

" no vi compatibility
set nocompatible

" Make backspace behave in a sane manner.
set backspace=indent,eol,start

" Switch syntax highlighting on
syntax on

hi SpellBad ctermfg=15

" Enable file type detection and do language-dependent indenting.
filetype plugin indent on

" Show position in file
set ruler

" Show line numbers
set number

" No noise.
set noerrorbells  

" only blink cursor in insert
set gcr=n:blinkon0

" set _ as word separator
" set iskeyword-=_

" Always show status line.
set laststatus=2

" don't pop the 'ATTENTION' message when an existing swap file is found
set shortmess+=A

" Use 2 spaces for tabs, turn on automatic indenting
set tabstop=2
set smarttab
set shiftwidth=2
set autoindent
set expandtab

" incremental search
set incsearch

" case-insensitive search
set ignorecase

" if a pattern contains an uppercase letter, it is case sensitive
set smartcase

" config for plugins
" vim powerline, to get symbols
let g:Powerline_symbols = 'fancy'

" CommandT
nmap <silent> <leader>g :CommandT<CR>
" allow CommandT to be cancelled with esc in terminal vim
let g:CommandTCancelMap=['<ESC>','<C-c>']

" NERDTree
map <leader>n :NERDTreeToggle<CR>

" Tlist
map <leader>t :TlistOpen<CR>

" only display tags for open buffer in Tlist
let Tlist_Show_One_File = 1

" point Tlist to exuberant ctags
let Tlist_Ctags_Cmd='/usr/local/bin/ctags'

" vim-slime
let g:slime_target = "tmux"

" delete buffer without losing split
map <silent> <leader>d :bp\|bd #<CR>

" look for tags in pwd
set tags=./tags

" slimux shortcuts
map <Leader>s :SlimuxREPLSendLine<CR>
vmap <Leader>s :SlimuxREPLSendSelection<CR>

" vim colors writer
let g:writer_journal_dir = '~/Desktop/vim-writer/'

" vim-markdown
au BufRead,BufNewFile *.md set filetype=markdown
let g:markdown_github_languages = ['ruby', 'erb=eruby']

" vim-jsx
" allow syntax highlighting in files other than jsx (ie. js)
let g:jsx_ext_required = 0
