call pathogen#infect()

" no vi compatibility
set nocompatible

" Show position in file
set ruler

" Show line numbers
set number

set noerrorbells  " No noise.
set laststatus=2  " Always show status line.

" Use 2 spaces for tabs, turn on automatic indenting
set tabstop=2
set smarttab
set shiftwidth=2
set autoindent
set expandtab
set backspace=start,indent,eol

" Turn on incremental search, case-insensitive search and syntax highlighting
set incsearch
set ignorecase
syntax on

" Set leader to comma
let mapleader = ","

" CommandT
nmap <silent> <leader>g :CommandT<CR>

" Set up command for NERDTree
map <leader>n :NERDTreeToggle<CR>

" Set up command for Tlist
map <leader>t :TlistToggle<CR>
" only display tags for open buffer
let Tlist_Show_One_File = 1

" Make backspace and cursor keys wrap accordingly"
" TODO: delete if you find you don't need it
" set whichwrap+=<,>,h,l

" Make editing .vimrc easier
map <leader>v :sp ~/.vimrc<CR>

" Generate a tags file in the current directory using Exuberant ctags
map <leader>e :silent :! ctags --recurse --sort=yes;sort tags > tmptags;mv tmptags tags<CR>:exe ":echo 'tags generated'"<CR>

let Tlist_Ctags_Cmd='/usr/local/bin/ctags'

filetype plugin indent on

" Invisible characters *********************************************************
set listchars=trail:.,tab:>-,eol:$
set nolist
map <leader>i :set list!<CR> " Toggle invisible chars"

" Omni Completion
" *************************************************************
autocmd FileType html :set omnifunc=htmlcomplete#CompleteTags
autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
autocmd FileType c set omnifunc=ccomplete#Complete

" May require ruby compiled in
autocmd FileType ruby,eruby set omnifunc=rubycomplete#Complete 

" put swap files in fixed dir
:set dir=~/Documents/vim_swap

" online ruby/rails documentation search
function! OnlineDoc()
  if &ft =~ "ruby"
    let s:urlTemplate = "http://railsapi.com/doc/rails-v2.3.8_ruby-v1.8/?q=%"
  else
    return
  endif
  let s:wordUnderCursor = expand("<cword>")
  let s:url = substitute(s:urlTemplate, "%", s:wordUnderCursor, "g")
  let s:cmd = "!open \"" . s:url . "\""
  execute s:cmd
endfunction

map <silent> <leader>d :call OnlineDoc()<CR>

" look for tags in pwd
set tags=./tags
